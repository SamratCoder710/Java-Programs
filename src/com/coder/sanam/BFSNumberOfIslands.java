package com.coder.sanam;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class BFSNumberOfIslands {
	
	

	public static int numIslands(char[][] grid) {
		int count =0;
        for(int i=0;i< grid.length;i++){
            for(int j=0;j<grid[i].length;j++){
                if(grid[i][j]=='1') {
                	count+= 1;
                	Set<Long> toReturnSet = new HashSet<>();
                	callBFS(grid,i,j,toReturnSet);
                }
            }
        }
        
        return count;
    }
	
	private static void callBFS(char[][] grid, int i, int j,Set<Long> toReturnSet) {
		if(toReturnSet.contains(((long) i << 32) | j)) {
			return;
		}
		System.out.println("i: "+i + " j: "+j);
		
		
		if(i<0 || i>=grid.length || j<0 || j>=grid[i].length) {
			return;
		}
		else if(grid[i][j]=='0') {
			toReturnSet.add(((long) i << 32) | j);
			return;
		}
		grid[i][j] = '0';
		callBFS(grid,i+1,j,toReturnSet);
		callBFS(grid,i-1,j,toReturnSet); 
		callBFS(grid,i,j-1,toReturnSet);
		callBFS(grid,i,j+1,toReturnSet);
	}

	public static void main(String[] args) {
		char[][] islandArray = 
			{{'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},{'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},{'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}};
				int resultCount = numIslands(islandArray);
		System.out.println("Count:: "+resultCount);
	}
}
